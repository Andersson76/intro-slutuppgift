Jag gick in i kursen med viss förståelse för webbutveckling och verktyg som Git, GitHub, Docker, VS Code och att arbeta agilt. Från min tidigare utbildning har jag redan satt upp en egen VM i Azure och deployat mitt examensarbete via Docker. Nu känner jag mig redo att fördjupa och utveckla mina kunskaper ytterligare. Jag har förståelse för IaaS, har arbetat med PaaS tjänster som Render och även med FaaS/serverless lösningar som Vercel. Under kursen har jag lärt mig mer specifikt om GitHub och GitHub Actions samt fått erfarenhet av att arbeta i Visual Studio, vilket är nytt för mig. Då jag kör Mac, arbetar jag med Visual Studio på Windows via VM/Parallels Desktop.

DevOps betyder för mig ett arbetssätt där utveckling och drift möts. Det handlar om processer och verktyg som minskar friktionen mellan att skriva kod och att köra den i produktion. Till en kompis skulle jag förklara det som: DevOps är att automatisera tråkiga och riskfyllda moment (bygga, testa, publicera) så teamet kan leverera små förbättringar oftare med högre kvalitet.” Det inkluderar CI/CD, versionshantering, övervakning, loggning och automatiserade tester.

När jag tänker på molnet känns det spännande att kunna skala upp och ner på ett sätt som inte är möjligt på en lokal server, samt att kunna välja rätt nivå av ansvar: IaaS när jag vill styra maskinerna, PaaS för snabb leverans av appar eller containers och SaaS när jag bara vill konsumera en färdig tjänst. Det som känns mest utmanande är kostnadskontroll över tid, säkerhet och att välja rätt tjänst bland alla alternativ. Jag ser också stor potential i serverless och managed databaser för att kunna fokusera mer på affärslogik än på infrastruktur.

Att vara systemutvecklare i ett team innebär för mig att kommunicera tydligt, hantera arbete i issues och pull requests, skriva kod som är enkel att förstå för andra, komplettera med tester som säkerställer att den fungerar som tänkt, och dokumentera så att det blir lätt att använda och bygga vidare på, samt ta ansvar för leveranser tillsammans. Det handlar också om att underlätta för teamet genom att följa en tydlig branch strategi för att undvika rörighet och använda CI för att snabbt upptäcka fel.

Det mest intressanta under de här tre veckorna har varit att börja använda Visual Studio, samt att arbeta med GitHub Actions och CI/CD.
